{"version":3,"sources":["components/commons/Login.module.css","components/commons/Login.jsx","components/commons/LoginContainer.jsx"],"names":["module","exports","LoginFormik","props","className","classes","formik","initialValues","email","password","checkbox","captcha","validationSchema","Yup","required","onSubmit","values","setSubmitting","setFieldError","setStatus","loginThunk","handleSubmit","emailField","name","type","placeholder","errors","passwordField","status","src","isSubmitting","toString","alt","checkboxField","remember","button","Login","isAuth","to","LoginContainer","this","React","Component","connect","state","auth"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,OAAS,sBAAsB,WAAa,0BAA0B,cAAgB,6BAA6B,cAAgB,6BAA6B,SAAW,wBAAwB,OAAS,sBAAsB,OAAS,wB,iKCoFhPC,EAAc,SAACC,GACxB,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,cAAC,IAAD,CACIC,cAAe,CAACC,MAAO,GAAIC,SAAU,GAAIC,UAAU,EAAOC,QAAS,IACnEC,iBAAkBC,IAAW,CACzBJ,SAAUI,MAAaC,SAAS,qGAChCN,MAAOK,MAAaL,MAAM,kFAAsBM,SAAS,uGAE7DC,SAAU,SAACC,EAAD,GAAwD,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC9ChB,EAAMiB,WAAWJ,EAAOR,MAAOQ,EAAOP,SAAUO,EAAON,SAAUO,EAAeC,EAAeC,EAAWH,EAAOL,UAPzH,SAWK,SAAAL,GAAM,OACF,eAAC,IAAD,CAAMS,SAAUT,EAAOe,aAAvB,UAEG,cAAC,IAAD,CAAOjB,UAAWC,IAAQiB,WAAYC,KAAK,QAAQC,KAAK,QAAQC,YAAa,UAC7E,qBAAKrB,UAAWC,IAAQqB,OAAxB,SAAgC,cAAC,IAAD,CAAcH,KAAK,YAGnD,cAAC,IAAD,CAAOnB,UAAWC,IAAQsB,cAAeJ,KAAK,WAAWC,KAAK,WACvDC,YAAa,aACpB,qBAAKrB,UAAWC,IAAQqB,OAAxB,SAAgC,cAAC,IAAD,CAAcH,KAAK,eACnD,qBAAKnB,UAAWC,IAAQqB,OAAxB,SAAiCpB,EAAOsB,SAGnCtB,EAAOsB,OACkB,+BAArBtB,EAAOsB,OAAO,IACX,gCACI,8BAAK,qBAAKC,IAAKvB,EAAOwB,aAAaC,WAAYC,IAAI,OACnD,8BAAK,cAAC,IAAD,CAAOT,KAAK,UAAUC,KAAK,OAAOC,YAAa,cACpD,qBAAKrB,UAAWC,IAAQqB,OAAxB,SAAgC,cAAC,IAAD,CAAcH,KAAK,iBAEvD,KAKZ,kCACI,cAAC,IAAD,CAAOnB,UAAWC,IAAQ4B,cAAeV,KAAK,WAAWC,KAAK,aAC9D,sBAAMpB,UAAWC,IAAQ6B,SAAzB,gGAIJ,qBAAK9B,UAAWC,IAAQ8B,OAAxB,SACI,wBAAQX,KAAK,SAAb,iDA2BbY,EAhBD,SAACjC,GACX,OAAIA,EAAMkC,OACC,cAAC,IAAD,CAAUC,GAAI,aAIrB,gCACI,uCACA,8BACI,cAAC,EAAD,CAAalB,WAAYjB,EAAMiB,mBCjJzCmB,E,4JAEF,WACI,OACI,cAAC,EAAD,eAAWC,KAAKrC,Y,GAJCsC,IAAMC,WAiBpBC,uBAPS,SAACC,GACrB,MAAO,CACHP,OAAQO,EAAMC,KAAKR,UAKa,CAACjB,gBAA1BuB,CAAuCJ","file":"static/js/5.9be0d611.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"Login_errors__3wFhf\",\"emailField\":\"Login_emailField__qaoLF\",\"passwordField\":\"Login_passwordField__2hBxQ\",\"checkboxField\":\"Login_checkboxField__2Jjct\",\"remember\":\"Login_remember__1NDpf\",\"button\":\"Login_button__1YO0h\",\"formik\":\"Login_formik__3eZ8Y\"};","import React from \"react\";\r\nimport {ErrorMessage, Form, Formik, Field,} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport classes from './Login.module.css'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n// export const LoginForm = () => {\r\n//     return (\r\n//         <form>\r\n//             <div>\r\n//                 <input placeholder={'login'} type={'string'}/>\r\n//             </div>\r\n//             <div>\r\n//                 <input placeholder={'password'} type={'password'}/>\r\n//             </div>\r\n//             <div>\r\n//                 <input type={'checkbox'}/> remember me\r\n//             </div>\r\n//             <div>\r\n//                 <button type={'submit'}>Отправить</button>\r\n//             </div>\r\n//         </form>\r\n//     );\r\n// }\r\n\r\n\r\n// export const LoginFormik = (props) => {\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             email: '',\r\n//             password: '',\r\n//             checkbox: ''\r\n//         },\r\n//         onSubmit: values => {\r\n//             console.log(values);\r\n//         },\r\n//     });\r\n//     return (\r\n//         <div>\r\n//             <form onSubmit={formik.handleSubmit}>\r\n//                 <div>\r\n//\r\n//                     <input\r\n//                         id=\"email\"\r\n//                         name=\"email\"\r\n//                         type=\"email\"\r\n//                         onChange={formik.handleChange}\r\n//                         value={formik.values.email}\r\n//                         placeholder={'email'}\r\n//                     />\r\n//                 </div>\r\n//\r\n//                 <div>\r\n//\r\n//                     <input\r\n//                         id=\"password\"\r\n//                         name=\"password\"\r\n//                         type=\"password\"\r\n//                         onChange={formik.handleChange}\r\n//                         value={formik.values.password}\r\n//                         placeholder={'password'}\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//\r\n//                     <input\r\n//                         id=\"checkbox\"\r\n//                         name=\"checkbox\"\r\n//                         type=\"checkbox\"\r\n//                         onChange={formik.handleChange}\r\n//                         value={formik.values.checkbox}\r\n//                     /> запомнить меня\r\n//                 </div>\r\n//                 <div>\r\n//                     <button type=\"submit\">Submit</button>\r\n//                 </div>\r\n//\r\n//             </form>\r\n//\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nexport const LoginFormik = (props) => {\r\n    return (\r\n        <div className={classes.formik}>\r\n            <Formik\r\n                initialValues={{email: '', password: '', checkbox: false, captcha: ''}}\r\n                validationSchema={Yup.object({\r\n                    password: Yup.string().required('Обязательное поле'),\r\n                    email: Yup.string().email('Некорректный email').required('Обязательное поле'),\r\n                })}\r\n                onSubmit={(values, {setSubmitting, setFieldError, setStatus}) => {\r\n                    props.loginThunk(values.email, values.password, values.checkbox, setSubmitting, setFieldError, setStatus, values.captcha);\r\n                }}\r\n\r\n            >\r\n                {formik =>\r\n                    (<Form onSubmit={formik.handleSubmit}>\r\n\r\n                        <Field className={classes.emailField} name=\"email\" type=\"email\" placeholder={'email'}/>\r\n                        <div className={classes.errors}><ErrorMessage name='email'/></div>\r\n\r\n\r\n                        <Field className={classes.passwordField} name=\"password\" type=\"password\"\r\n                               placeholder={'password'}/>\r\n                        <div className={classes.errors}><ErrorMessage name='password'/></div>\r\n                        <div className={classes.errors}>{formik.status}</div>\r\n\r\n                        {\r\n                            (formik.status) ?\r\n                                (formik.status[0] === 'Incorrect anti-bot symbols') && (\r\n                                    <div>\r\n                                        <div><img src={formik.isSubmitting.toString()} alt=\"\"/></div>\r\n                                        <div><Field name=\"captcha\" type=\"text\" placeholder={'captcha'}/></div>\r\n                                        <div className={classes.errors}><ErrorMessage name='captcha'/></div>\r\n                                    </div>\r\n                                ) : null\r\n\r\n                        }\r\n\r\n\r\n                        <label>\r\n                            <Field className={classes.checkboxField} name=\"checkbox\" type=\"checkbox\"/>\r\n                            <span className={classes.remember}>запомнить меня</span>\r\n                        </label>\r\n\r\n\r\n                        <div className={classes.button}>\r\n                            <button type=\"submit\">Вход</button>\r\n                        </div>\r\n\r\n                    </Form>)}\r\n\r\n            </Formik>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <div>\r\n                <LoginFormik loginThunk={props.loginThunk}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\nimport Login from \"./Login\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Login {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(LoginContainer);\r\n"],"sourceRoot":""}