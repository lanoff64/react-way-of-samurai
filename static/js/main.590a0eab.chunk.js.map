{"version":3,"sources":["utils/objHelper.js","redux/usersReducer.js","components/Music/Music.module.css","components/Settings/Settings.module.css","api/api.js","components/NavBar/NavBar.module.css","reportWebVitals.js","redux/profilePageReducer.js","redux/navBarReducer.js","redux/appReducer.js","redux/redux-store.js","components/NavBar/NavBar.jsx","components/NavBar/NavBarContainer.jsx","components/HeaderHtml/HeaderHtml.jsx","components/HeaderHtml/HeaderHtmlContainer.js","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Profile/ProfileStatus/ProfileStatusHooks.jsx","components/Profile/ProfileLinks/ProfileLinks.jsx","components/Profile/AboutSelf/AboutSelf.jsx","components/Profile/ProfileLinks/LinksForm.jsx","components/Profile/Description/PersonInfo.jsx","assets/images/settingBtn.svg","components/commons/SettingBtn.jsx","components/Profile/Description/PersonAvatar.jsx","components/commons/useToggle.jsx","components/Profile/UserName/UserName.jsx","components/Profile/Description/Description.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","index.js","components/commons/Preloader/Preloader.jsx","components/Profile/Description/Disc.module.css","components/HeaderHtml/HeaderHtml.module.css","components/Profile/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/MyPosts.module.css","redux/authReducer.js","components/Dialogs/Dialogs.module.css","assets/images/no-user-26.jpg","components/Profile/Profile.module.css","components/commons/Preloader/Preloader.module.css","components/commons/SettingBtn.module.css","components/Profile/MyPosts/Post/Post.module.css","redux/dialogsPageReducer.js","components/Dialogs/UserDialog/UserDialog.jsx"],"names":["updateObjInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCH","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pagesSize","totalUsersCount","currentPage","isFetch","followingInProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetch","toggleFollowingProgress","isFetching","requestUsers","page","dispatch","a","usersAPI","getUsers","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followUser","bind","unfollow","unFollowUser","usersReducer","state","action","followed","filter","id","module","exports","instance","axios","baseURL","withCredentials","headers","get","then","response","getProfile","console","warn","profileAPI","post","delete","sendPhoto","formData","getStatus","updateStatus","status","put","setMainPhotoApi","file","FormData","append","saveContacts","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","getCaptcha","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_USERS_PROFILE","SET_USERS_STATUS","SET_CONTACTS","SET_MAIN_PHOTO","TOGGLE_IS_DOWNLOAD","postsState","message","likescount","aboutMe","isDownload","setUsersStatus","toggleIsDownLoad","getProfileThunk","profilePageReducer","postText","photos","name","avatar","navBarReducer","INITIALISED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsPageReducer","navBar","usersPage","auth","authReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","props","mapFriend","friend","UserDialog","className","classes","nav","navAndFriends","navMargin","item","to","activeClassName","activeLink","settings","friends","NavBarContainer","connect","HeaderHtml","wr1","headLogo","src","alt","loginBlock","userLogin","avaLogin","small","UserPhoto","outBtn","onClick","logoutThunk","HeaderHtmlContainer","this","React","Component","isAuth","Music","music","News","lenta","title","width","height","zakonKz","mailKz","kurs","tenge","uploadPhoto","imageFile","document","querySelector","files","res","log","Settings","ProfileStatusHooks","isOwner","useState","editMode","setEditMode","setStatus","useEffect","activeEditMode","deActiveEditMode","profileStatusHooks","onDoubleClick","statusGrid","statusArea","profileStatusHooksBtn","textArea","maxLength","cols","rows","placeholder","onChange","e","currentTarget","value","autoFocus","onFocus","event","target","select","onBlur","Contacts","contactTitle","contactValue","contacts","contactsValues","href","noInfoContacts","ProfileLinks","goToEditMode","profileLinks","nameField","Object","keys","key","editBtnGrid","editBtn","AboutSelf","goToEditModeAbout","divDesc","divDescLabel","aboutValues","lookingForAJobDescription","lookingForAJob","aboutSelfEditBtn","LinksFormFormik","initialValues","outEditMode","formiklinks","onSubmit","values","formik","handleSubmit","nameFieldAbout","htmlFor","contactsBtn","errors","LinksFormFormikAbout","formiklinksAbout","LinksForm","PersonInfo","editModeAbout","setEditModeAbout","about","linksOrForm","SettingBtn","bgBtn","disabled","backImgBtn","settingBtnImg","PersonAvatar","initialValue","setValue","toggle","useCallback","v","useToggle","editModeToggle","imgSrc","large","avaImg","loading","Preloader","settingBtn","selectImg","avatarInp","length","savePhotoThunk","UserName","userDecsName","fullName","divDescLabelName","Description","avaAndDesc","Post","like","TextAreaFormik","MyTextArea","label","useField","field","formikForm","validationSchema","Yup","min","max","addPost","button","MyPosts","mapPostsData","reverse","postMessage","mypost","labelMyPost","divPost","newPostText","addPostAC","Profile","allProfile","afterWall","MyPostsContainer","ProfileContainer","match","params","authorizedUserId","getUsersStatus","history","push","refreshProfile","prevProps","prevState","snapshot","alert","getState","messages","withRouter","LoginContainer","lazy","DialogsContainer","UsersContainer","App","catchAllUnhandleErrors","initializeAppThunk","addEventListener","fallback","exact","from","path","component","render","promise","authMeThunk","Promise","all","ReactDOM","StrictMode","getElementById","preloader","spinner","AUTH_USER_DATA","PROFILE_INFO","setAuthUser","payload","loginThunk","setSubmitting","setFieldError","url","SEND_MESSAGE","dialogsState","messageState","answerState","sendMessage","messageText","way","user"],"mappings":"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","file":"static/js/main.590a0eab.chunk.js","sourcesContent":["\r\nexport const updateObjInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjInArray} from \"../utils/objHelper\";\r\n\r\nconst FOLLOW = \"network/users/FOLLOW\";\r\nconst UNFOLLOW = \"network/users/UNFOLLOW\";\r\nconst SET_USERS = \"network/users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"network/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"network/users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCH = \"network/users/TOGGLE_IS_FETCH\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"network/users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pagesSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetch: false,\r\n    followingInProgress: [],\r\n    // fake: 10 //for test reselectors\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        // case \"FAKE\" : return {...state, fake: state.fake + 1} //test reselecors\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users,action.userId,'id', {followed:true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users,action.userId,'id', {followed:false})\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        }\r\n        case TOGGLE_IS_FETCH: {\r\n            return {\r\n                ...state,\r\n                isFetch: action.isFetch\r\n            }\r\n\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching ?\r\n                        [...state.followingInProgress, action.userId]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetch = (isFetch) => ({type: TOGGLE_IS_FETCH, isFetch});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const requestUsers = (page, pagesSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetch(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pagesSize);\r\n        dispatch(toggleIsFetch(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId,usersAPI.followUser.bind(usersAPI),followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n       followUnfollowFlow(dispatch, userId,usersAPI.unFollowUser.bind(usersAPI),unfollowSuccess);\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__jAZj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__vgBiU\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers:{\r\n        \"API-KEY\": \"5510905d-aa85-4af6-8a43-3c4177e014f0\", //7143f507-a8a7-4262-988c-7695e2a8a1e3\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage = 1,pagesSize = 10){\r\n        return instance.get(`users?page=${currentPage}&count=${pagesSize}`)\r\n                .then(response => {\r\n                    return  response.data;\r\n                })\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please use profileAPI.getProfile object.');\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n    followUser(userId){\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unFollowUser(userId){\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    sendPhoto(formData){\r\n        return instance.post(`profile/photo`, formData);\r\n    },\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    setMainPhotoApi(file){\r\n        const formData = new FormData();\r\n        formData.append('image',file)\r\n        return instance.put(`profile/photo/`, formData,{\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        } );\r\n    },\r\n    saveContacts(profile){\r\n        return instance.put(`profile`, profile);\r\n    },\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password,rememberMe = false,captcha){\r\n        return instance.post('/auth/login', {email, password,rememberMe,captcha});\r\n    },\r\n    logout(){\r\n        return instance.delete('/auth/login');\r\n    },\r\n    getCaptcha(){\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1KW5X\",\"item\":\"NavBar_item__3EQDI\",\"activeLink\":\"NavBar_activeLink__1qeZa\",\"settings\":\"NavBar_settings___SIuJ\",\"friends\":\"NavBar_friends__3yHn4\",\"navMargin\":\"NavBar_navMargin__1w9Oc\",\"users\":\"NavBar_users__362qv\",\"navAndFriends\":\"NavBar_navAndFriends__36KNC\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {profileAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = \"network/profile/ADD-POST\";\r\nconst SET_USERS_PROFILE = \"network/profile/SET_USERS_PROFILE\";\r\nconst SET_USERS_STATUS = \"network/profile/SET_USERS_STATUS\";\r\nconst SET_CONTACTS = \"network/profile/SET_CONTACTS\";\r\nconst SET_MAIN_PHOTO = \"network/profile/SET_MAIN_PHOTO\";\r\nconst TOGGLE_IS_DOWNLOAD = \"network/profile/TOGGLE_IS_DOWNLOAD\";\r\n\r\nlet initialState = {\r\n    postsState: [\r\n        {id: 1, message: 'How are you ?', likescount: 3},\r\n        {id: 2, message: 'We will rock U', likescount: 10},\r\n        {id: 3, message: 'Check my Git', likescount: 0},\r\n        {id: 4, message: 'Check my Greets', likescount: 0},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    aboutMe: null,\r\n    isDownload:false\r\n};\r\n\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsState: [...state.postsState, {id: 5, message: action.postText, likescount: 0}]\r\n            };\r\n        case SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USERS_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_CONTACTS:\r\n            return {\r\n                ...state, profile: {...state.profile,profile:action.profile}\r\n            }\r\n        case SET_MAIN_PHOTO:\r\n            return {...state, profile: {...state.profile,photos:action.file}\r\n            }\r\n        case TOGGLE_IS_DOWNLOAD: {\r\n            return {\r\n                ...state,\r\n                isDownload: action.isDownload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostAC = (postText) => ({type: ADD_POST, postText: postText});\r\nexport const setUsersProfile = (profile) => ({type: SET_USERS_PROFILE, profile});\r\nexport const setUsersStatus = (status) => ({type: SET_USERS_STATUS, status});\r\nexport const setContacts = (profile) => ({type: SET_CONTACTS, profile});\r\nexport const setMainPhoto = (file) => ({type: SET_MAIN_PHOTO, file});\r\nexport const toggleIsDownLoad = (isDownload) => ({type: TOGGLE_IS_DOWNLOAD, isDownload});\r\n\r\n\r\nexport const getProfileThunk = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsDownLoad(true));\r\n        let response = await profileAPI.getProfile(userId);\r\n        dispatch(toggleIsDownLoad(false));\r\n        dispatch(setUsersProfile(response.data));\r\n    }\r\n}\r\nexport const getUsersStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n        dispatch(setUsersStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        try{\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUsersStatus(status));\r\n        }\r\n        } catch (error){\r\n            alert(error)//dispatch error\r\n        }\r\n    }\r\n}\r\nexport const savePhotoThunk = (file) =>  async (dispatch,getState) => {\r\n        const userId = getState().auth.id;\r\n        let response = await profileAPI.setMainPhotoApi(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getProfileThunk(userId));\r\n        }\r\n\r\n}\r\n\r\nexport const saveContacts = (profile,setStatus) => {\r\n    return async (dispatch,getState) => {\r\n        const userId = getState().auth.id;\r\n        let response = await profileAPI.saveContacts(profile);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getProfileThunk(userId));\r\n        }else {\r\n            setStatus(response.data.messages)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profilePageReducer;","let initialState = [\r\n    {\r\n        id: 1,\r\n        name: 'Dimich',\r\n        avatar: 'https://i.ytimg.com/vi/iJ4UGNGzJzY/hqdefault.jpg?sqp=-oaymwEXCOADEI4CSFryq4qpAwkIARUAAIhCGAE=&rs=AOn4CLBnmgSojZdsUkxXfQLs7wK5dW0irw'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Maria',\r\n        avatar: 'https://www.seas.harvard.edu/sites/default/files/styles/embedded_image_large/public/images/news/zlatkova_maria_web_square.jpg?itok=Z2IqHSei'\r\n    },\r\n    {\r\n        id: 21,\r\n        name: 'Victor',\r\n        avatar: 'https://i.ytimg.com/an/TW0FUhT0m-Bqg2trTbSs0g/featured_channel.jpg?v=5fc22bf3'\r\n    }\r\n    ];\r\n\r\n\r\nconst navBarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return initialState;\r\n    }\r\n\r\nexport default navBarReducer;","import {authMeThunk} from \"./authReducer\";\r\n\r\nconst INITIALISED_SUCCESS = \"network/initial/INITIALISED_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    initialized:false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALISED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initialisedSuccess = () => ({type: INITIALISED_SUCCESS});\r\n\r\nexport const initializeAppThunk = () => (dispatch) => {\r\n        let promise = dispatch(authMeThunk());\r\n        Promise.all([promise])\r\n            .then(()=> {\r\n           dispatch(initialisedSuccess());\r\n        });\r\n\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport navBarReducer from \"./navBarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profilePageReducer,\r\n    dialogsPage:dialogsPageReducer,\r\n    navBar:navBarReducer,\r\n    usersPage:usersReducer,\r\n    auth:authReducer,\r\n    app:appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport classes from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport UserDialog from \"../Dialogs/UserDialog/UserDialog\";\r\n\r\nconst NavBar = (props) => {\r\n    let mapFriend = props.state.map(friend =>\r\n        <UserDialog name={friend.name} key={friend.id} id={friend.id} avatar={friend.avatar}/>);\r\n    return (\r\n\r\n\r\n        <nav className={classes.nav}>\r\n            <div className={classes.navAndFriends}>\r\n            <div className={classes.navMargin}>\r\n                <div className={classes.item}><NavLink to='/profile' activeClassName={classes.activeLink}>\r\n                    Profile</NavLink>\r\n                </div>\r\n                <div className={classes.item}><NavLink to='/dialogs' activeClassName={classes.activeLink}>\r\n                    Messages</NavLink>\r\n                </div>\r\n                <div className={classes.item}><NavLink to='/news' activeClassName={classes.activeLink}>\r\n                    News</NavLink>\r\n                </div>\r\n                <div className={classes.item}><NavLink to='/music' activeClassName={classes.activeLink}>\r\n                    Music</NavLink>\r\n                </div>\r\n                <div className={`${classes.item} ${classes.settings}`}><NavLink to='/settings'\r\n                                                                                activeClassName={classes.activeLink}>\r\n                    Settings</NavLink>\r\n                </div>\r\n\r\n                <div  className={classes.users}>\r\n                    <NavLink to='/users' activeClassName={classes.activeLink}>\r\n                        Users\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={`${classes.item} ${classes.friends}`}>\r\n                    FRIENDS\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {mapFriend}\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default NavBar;","import NavBar from \"./NavBar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        state:state.navBar\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return{\r\n\r\n    }\r\n}\r\nconst NavBarContainer = connect(mapStateToProps,mapDispatchToProps)(NavBar)\r\nexport default NavBarContainer;","import React from 'react';\r\nimport classes from './HeaderHtml.module.css';\r\nimport UserPhoto from \"../../assets/images/no-user-26.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst HeaderHtml = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.wr1}>\r\n                <div className={classes.headLogo}>\r\n                    <img src='https://cdn.iconscout.com/icon/premium/png-256-thumb/social-connection-7-771032.png' alt='logo'/>\r\n                </div>\r\n\r\n                <div>\r\n                    {props.profile ?\r\n                        <div className={classes.loginBlock}>\r\n                            <div className={classes.userLogin}>\r\n                                {props.login}\r\n                                {/*{' '}(id:{props.id})*/}\r\n                            </div>\r\n\r\n                            <div className={classes.avaLogin}>\r\n                                <img src={props.profile.photos.small ? props.profile.photos.small : UserPhoto}\r\n                                     alt=\"avatar\"/>\r\n                            </div>\r\n                            <div className={classes.outBtn}>\r\n                                <button onClick={props.logoutThunk}>Выйти</button>\r\n                            </div>\r\n                        </div>\r\n                        : <div className={classes.loginBlock}>\r\n                            <NavLink to={\"/login\"}>Login</NavLink>\r\n                            <img src={UserPhoto} alt=\"avatar\"/>\r\n\r\n                        </div>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderHtml;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunk} from \"../../redux/authReducer\";\r\nimport HeaderHtml from \"./HeaderHtml\";\r\n\r\n\r\nclass HeaderHtmlContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <HeaderHtml {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n        id: state.auth.id,\r\n        email: state.auth.email,\r\n        profile: state.auth.profile\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(HeaderHtmlContainer);","import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={classes.music}>\r\n\r\n            Music\r\n            {/*test commit*/}\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Music;\r\n","import React from 'react';\r\n\r\n\r\nconst News = (props) => {\r\n    const lenta = <iframe title={'news'} width=\"800\" height=\"350\" className=\"news\"\r\n                           src=\"http://feeds.feedburner.com/lenta/MpsS\"/>;\r\n\r\n    const zakonKz = <iframe title={'news'} width=\"800\" height=\"350\" className=\"news\"\r\n                            src=\"http://feeds.feedburner.com/zakon/vWos\"/>;\r\n\r\n    const mailKz = <iframe title={'news'} width=\"800\" height=\"350\" className=\"news\"\r\n                           src=\"http://feeds.feedburner.com/mail/YeGC\"/>;\r\n\r\n    const kurs = <iframe title={'news'} width=\"800\" height=\"350\" className=\"news\"\r\n                           src=\"http://feeds.feedburner.com/com/cMiY\"/>;\r\n\r\n    const tenge = <iframe title={'news'} width=\"800\" height=\"350\" className=\"news\"\r\n                           src=\"http://feeds.feedburner.com/kzt\"/>;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {lenta}\r\n            </div>\r\n\r\n\r\n            <div>\r\n                {zakonKz}\r\n            </div>\r\n\r\n            <div>\r\n                {mailKz}\r\n            </div>\r\n\r\n            <div>\r\n                {kurs}\r\n            </div>\r\n\r\n            <div>\r\n                {tenge}\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\nexport default News;\r\n","import React from 'react';\r\nimport classes from './Settings.module.css'\r\nimport {profileAPI} from \"../../api/api\";\r\n\r\nconst uploadPhoto = () => {\r\n    let formData = new FormData();\r\n    let imageFile = document.querySelector('#photo');\r\n    formData.append(\"image\", imageFile.files[0]);\r\n    profileAPI.sendPhoto(formData)\r\n        .then(res => console.log(res.data))\r\n}\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={classes.settings}>\r\n\r\n            <p>Settings</p>\r\n            <input type=\"file\" id=\"photo\"/>\r\n\r\n\r\n            <button onClick={uploadPhoto} >Отправить</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Settings;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport classes from './ProfileStatus.module.css';\r\n\r\n\r\nconst ProfileStatusHooks = ({isOwner,...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect(() =>{\r\n        setStatus(props.status);\r\n    },[props.status] )\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    const handleFocus = (event) => event.target.select();\r\n        return (\r\n\r\n            <div className={classes.profileStatusHooks}>\r\n                {isOwner ?\r\n\r\n                    <div\r\n                    onDoubleClick={activeEditMode}\r\n                    className={classes.status}>\r\n                    {!editMode &&\r\n                        <div className={classes.statusGrid}>\r\n                            <div className={classes.statusArea}>\r\n                                {props.status || '----'}\r\n                            </div>\r\n\r\n                            <div className={classes.profileStatusHooksBtn}>\r\n                                <button onClick={activeEditMode}>Смена статуса</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    }\r\n\r\n                    {editMode &&\r\n                    <div className={classes.textArea}>\r\n                        <textarea\r\n                            maxLength=\"300\"\r\n                            cols=\"60\" rows=\"5\"\r\n                            placeholder={'Ваш статус'}\r\n                            onChange={onStatusChange}\r\n                            autoFocus={true}\r\n                            onFocus={handleFocus}\r\n                            onBlur={deActiveEditMode}\r\n                            value={status}\r\n                        />\r\n                        <div>\r\n                            <button onClick={deActiveEditMode}>Сохранить</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    }\r\n                </div>\r\n                    :\r\n                    <div className={classes.statusArea}>\r\n                        {props.status || '----'}\r\n                    </div> }\r\n\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks;\r\n\r\n","import classes from \"../Description/Disc.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst ProfileLinks = ({profile, isOwner,goToEditMode}) => {\r\n\r\n    return(\r\n        <div className={classes.profileLinks}>\r\n            <div className={classes.nameField}>\r\n\r\n\r\n                {Object.keys(profile.contacts).map(key =>\r\n                    <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                )}\r\n\r\n            </div>\r\n\r\n\r\n                {isOwner &&\r\n                    <div className={classes.editBtnGrid}>\r\n                        <button className={classes.editBtn} onClick={goToEditMode}>Edit</button>\r\n                    </div>\r\n                }\r\n\r\n        </div>\r\n\r\n    )\r\n }\r\n\r\n\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return (\r\n    <div className={classes.contacts}>\r\n        {contactTitle}:\r\n        <div className={classes.contactsValues}>\r\n            {contactValue ?\r\n                <a href={contactValue}>{contactValue}</a>\r\n                : <span className={classes.noInfoContacts}>no information</span>}\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n export default ProfileLinks;\r\n\r\n","import classes from \"../Description/Disc.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst AboutSelf = ({profile,isOwner,goToEditModeAbout}) => {\r\n    return (\r\n        <div className={classes.divDesc}>\r\n\r\n            <div className={classes.divDescLabel}>О себе:\r\n                <span  className={classes.aboutValues}>{profile.aboutMe}</span> </div>\r\n\r\n            <div className={classes.divDescLabel}>\r\n               Мои скиллы:\r\n               <span  className={classes.aboutValues}> {profile.lookingForAJobDescription}</span>\r\n            </div>\r\n\r\n            <div className={classes.divDescLabel}>\r\n                Ищу работу:\r\n                <span className={classes.aboutValues}> {profile.lookingForAJob ? 'Да' : 'Нет'}</span>\r\n            </div>\r\n\r\n            <div className={classes.aboutSelfEditBtn}>\r\n                {isOwner &&\r\n                <button className={classes.editBtn} onClick={goToEditModeAbout}>Edit</button>}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutSelf;","import React from \"react\";\r\nimport classes from \"../Description/Disc.module.css\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\n\r\n\r\nconst LinksFormFormik = ({initialValues, outEditMode, ...props}) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.formiklinks}>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values, {setStatus}) => {\r\n                    props.saveContacts(values, setStatus);//thunk\r\n                }}\r\n            >\r\n                {formik =>\r\n                    (\r\n                        <Form onSubmit={formik.handleSubmit}>\r\n                            <div className={classes.nameFieldAbout}>\r\n                            <div>\r\n                                <label htmlFor='contacts.facebook'>facebook: </label>\r\n                                <Field name='contacts.facebook' type=\"text\" placeholder={'facebook'}/>\r\n                                <ErrorMessage name='contacts.facebook'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.website'>website: </label>\r\n                                <Field name='contacts.website' type=\"text\" placeholder={'website'}/>\r\n                                <ErrorMessage name='contacts.website'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.vk'>vk: </label>\r\n                                <Field name='contacts.vk' type=\"text\" placeholder={'vk'}/>\r\n                                <ErrorMessage name='contacts.vk'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.twitter'>twitter: </label>\r\n                                <Field name='contacts.twitter' type=\"text\" placeholder={'twitter'}/>\r\n                                <ErrorMessage name='contacts.twitter'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.instagram'>instagram: </label>\r\n                                <Field name='contacts.instagram' type=\"text\" placeholder={'instagram'}/>\r\n                                <ErrorMessage name='contacts.instagram'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.youtube'>youtube: </label>\r\n                                <Field name='contacts.youtube' type=\"text\" placeholder={'youtube'}/>\r\n                                <ErrorMessage name='contacts.youtube'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.github'>github: </label>\r\n                                <Field name='contacts.github' type=\"text\" placeholder={'github'}/>\r\n                                <ErrorMessage name='contacts.github'/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='contacts.mainLink'>mainLink: </label>\r\n                                <Field name='contacts.mainLink' type=\"text\" placeholder={'mainLink'}/>\r\n                                <ErrorMessage name='contacts.mainLink'/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className={classes.contactsBtn}>\r\n                                <button type=\"submit\">Save</button>\r\n                                <button onClick={outEditMode}>Cancel</button>\r\n                            </div>\r\n\r\n                            <span className={classes.errors}>{formik.status ? formik.status : null}</span>\r\n\r\n                        </Form>\r\n\r\n                    )}\r\n\r\n            </Formik>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport const LinksFormFormikAbout = ({initialValues, outEditMode, ...props}) => {\r\n    return (\r\n        <div className={classes.formiklinksAbout}>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values,{setStatus}) => {\r\n                    props.saveContacts(values,setStatus);\r\n                }}\r\n            >\r\n                {formik =>\r\n\r\n                    (\r\n                        <Form onSubmit={formik.handleSubmit}>\r\n\r\n                                {/*<div>*/}\r\n                                {/*    <label htmlFor=\"fullName\">Ваше Имя: </label>*/}\r\n                                {/*    <Field name=\"fullName\" type=\"text\" placeholder={'ваше Имя'}/>*/}\r\n                                {/*    <ErrorMessage name=\"fullName\"/>*/}\r\n                                {/*</div>*/}\r\n\r\n                            <div className={classes.nameFieldAbout}>\r\n                                <div>\r\n                                    <label htmlFor=\"aboutMe\">О себе: </label>\r\n                                    <Field name=\"aboutMe\" type=\"text\" placeholder={'расскажите о себе'}/>\r\n                                    <ErrorMessage name=\"aboutMe\"/>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label htmlFor=\"lookingForAJobDescription\">Мои скиллы: </label>\r\n                                    <Field name=\"lookingForAJobDescription\" type=\"text\" placeholder={'skills'}/>\r\n                                    <ErrorMessage name='lookingForAJobDescription'/>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label htmlFor=\"lookingForAJob\">Ищу работу: </label>\r\n                                    <Field name='lookingForAJob' type='checkbox'/>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                                <button type=\"submit\">Save</button>\r\n                                <button onClick={outEditMode}>Cancel</button>\r\n                                <span className={classes.errors}>{formik.status ? formik.status : null}</span>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </Formik>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LinksForm = ({outEditMode, saveContacts, initialValues, profile}) => {\r\n    return (\r\n        <div>\r\n            <LinksFormFormik initialValues={initialValues} saveContacts={saveContacts} outEditMode={outEditMode}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default LinksForm;","import React, {useState} from \"react\";\r\nimport classes from './Disc.module.css';\r\nimport ProfileStatusHooks from \"../ProfileStatus/ProfileStatusHooks\";\r\nimport ProfileLinks from \"../ProfileLinks/ProfileLinks\";\r\nimport AboutSelf from \"../AboutSelf/AboutSelf\";\r\nimport LinksForm, {LinksFormFormikAbout} from \"../ProfileLinks/LinksForm\";\r\n\r\nconst PersonInfo = ({profile, status, updateStatus,saveContacts, ...props}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editModeAbout, setEditModeAbout] = useState(false);\r\n\r\n    const goToEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const outEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n    const goToEditModeAbout = () => {\r\n        setEditModeAbout(true);\r\n    }\r\n    const outEditModeAbout = () => {\r\n        setEditModeAbout(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.about}>\r\n\r\n            <ProfileStatusHooks isOwner={props.isOwner} status={status} updateStatus={updateStatus}/>\r\n\r\n            <div className={classes.linksOrForm}>\r\n\r\n                {editMode ?\r\n                    <LinksForm profile={profile} initialValues={profile} saveContacts={saveContacts} outEditMode={outEditMode}/>\r\n                    :\r\n                    <ProfileLinks goToEditMode={goToEditMode} isOwner={props.isOwner} profile={profile}/>}\r\n            </div>\r\n\r\n            {editModeAbout ?\r\n                <LinksFormFormikAbout profile={profile} initialValues={profile} saveContacts={saveContacts} outEditMode={outEditModeAbout}/>\r\n                :\r\n                <AboutSelf goToEditModeAbout={goToEditModeAbout} isOwner={props.isOwner} profile={profile}/>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default PersonInfo;","export default __webpack_public_path__ + \"static/media/settingBtn.72679fc5.svg\";","import React from \"react\";\r\nimport settingBtnImg from \"../.././assets/images/settingBtn.svg\";\r\nimport classes from './SettingBtn.module.css'\r\n\r\nconst SettingBtn =(props)=>{\r\n    return (\r\n            <div className={classes.bgBtn}>\r\n                <input\r\n                    disabled={props.isDownload}\r\n                    className={classes.backImgBtn}\r\n                    type=\"image\" src={settingBtnImg}\r\n                    alt={'btn'}\r\n                    onClick={props.onClick}/>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default SettingBtn;","import React from \"react\";\r\nimport classes from './Disc.module.css';\r\nimport UserPhoto from \"./../../../assets/images/no-user-26.jpg\"\r\nimport Preloader from \"../../commons/Preloader/Preloader\";\r\nimport SettingBtn from \"../../commons/SettingBtn\";\r\nimport useToggle from \"../../commons/useToggle\";\r\n\r\n\r\nconst PersonAvatar = ({profile, ...props}) => {\r\n    //переключатель на хуке\r\n    let [editMode, setEditMode] = useToggle();\r\n\r\n    const editModeToggle = () => {\r\n        setEditMode();\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhotoThunk(e.target.files[0]);\r\n            editModeToggle();\r\n        }\r\n    }\r\n//значение src аватарки\r\n    const imgSrc = profile.photos.large || UserPhoto;\r\n    //значенеие isDownload меняется перед запросом и сразу после получения аватарки\r\n    //при клике вкл. едит мод-file input\r\n    //если едит мод не включен, ничего не показывай\r\n    //иначе осветлить фон и если владелец показать кнопку\r\n    //кнопка не доступна если идет загрузка\r\n    //кнопка для отмены\r\n\r\n    return (\r\n        <div className={classes.avaImg}>\r\n            {props.isDownload ?\r\n                <div className={classes.loading}>\r\n                    <Preloader/>\r\n                </div> :\r\n                <img src={imgSrc} alt=\"avatar\"/>}\r\n            {props.isOwner ?\r\n                <div className={classes.settingBtn} >\r\n                    <SettingBtn isDownload={props.isDownload} onClick={editModeToggle}/>\r\n                </div> : null}\r\n            {!editMode && null}\r\n            {editMode &&\r\n            <div>\r\n                <div className={classes.selectImg}> </div>\r\n                <div className={classes.avatarInp}>\r\n                    {props.isOwner ?\r\n                        <input type=\"file\" onChange={onMainPhotoSelected}/> : null}\r\n                        <input type=\"button\" onClick={editModeToggle} value={'отмена'}/>\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default PersonAvatar;","import React from \"react\";\r\n\r\nexport  default function useToggle(initialValue = false) {\r\n    const [value, setValue] = React.useState(initialValue);\r\n    const toggle = React.useCallback(() => {\r\n        setValue(v => !v);\r\n    }, []);\r\n    return [value, toggle];\r\n}","import classes from \"../Description/Disc.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst UserName = ({profile}) => {\r\n    return (\r\n        <div className={classes.userDecsName} >\r\n            {profile.fullName}\r\n            <div className={classes.divDescLabelName}>\r\n                id:{profile.userId}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserName;","import React from \"react\";\r\nimport classes from './Disc.module.css';\r\nimport Preloader from \"../../commons/Preloader/Preloader\";\r\nimport PersonInfo from \"./PersonInfo\";\r\nimport PersonAvatar from \"./PersonAvatar\";\r\nimport UserName from \"../UserName/UserName\";\r\n\r\n\r\n\r\nconst Description = ({profile,updateStatus,status,saveContacts, ...props}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.avaAndDesc}>\r\n\r\n            <UserName profile={profile} />\r\n            <PersonAvatar profile={profile} {...props}/>\r\n            <PersonInfo saveContacts={saveContacts} isOwner={props.isOwner} updateStatus={updateStatus} status={status} profile={profile}/>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Description;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n            <img src='https://topmsg.ru/wp-content/uploads/anonymous.jpg' alt='avatar picture'/>\r\n            {props.message}\r\n            <div className={classes.like}>\r\n                <span>like: </span> {props.likescount}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {ErrorMessage, Form, Formik, useField} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst TextAreaFormik = (props) => {\r\n    const MyTextArea = ({label, ...props}) => {\r\n        const [field] = useField(props);\r\n        return (\r\n            <>\r\n                <textarea {...field} {...props} />\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <div className={classes.formikForm}>\r\n            <Formik\r\n                initialValues={{postText: ''}}\r\n                validationSchema={Yup.object({\r\n                    postText: Yup.string()\r\n                        .min(2, 'Хотя-бы 2 символа')\r\n                        .max(500, 'Максимально 500'),\r\n\r\n                })}\r\n                onSubmit={values => {\r\n                    props.addPost(values.postText)\r\n                }}\r\n            >\r\n                {formik =>\r\n                    (<Form onSubmit={formik.handleSubmit}>\r\n\r\n                        <MyTextArea className={classes.textArea}\r\n                                    name=\"postText\"\r\n                                    type=\"text-area\"\r\n                                    placeholder={` Что у Вас нового?`}\r\n                                    rows=\"5\"\r\n                                    cols=\"90\"/>\r\n\r\n                        <div className={classes.errors}>\r\n                            <ErrorMessage name='postText'/>\r\n                        </div>\r\n\r\n                        <div className={classes.button}>\r\n                            <button type=\"submit\">Запостить</button>\r\n                        </div>\r\n\r\n                    </Form>)}\r\n\r\n            </Formik>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let mapPostsData =\r\n        [...props.postsState]\r\n            .reverse()\r\n            .map(postMessage => <Post message={postMessage.message} key={postMessage.id}\r\n                                      likescount={postMessage.likescount}/>);\r\n\r\n    return (\r\n\r\n        <div className={classes.mypost}>\r\n            <div>\r\n                <div className={classes.labelMyPost}>\r\n                    <div><h3>My posts</h3></div>\r\n                    <div>\r\n                        <TextAreaFormik addPost={props.addPost}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={classes.divPost}>\r\n                    {mapPostsData}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default MyPosts;","import {addPostAC} from \"../../../redux/profilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        postsState:state.profilePage.postsState,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (postText) => {\r\n            dispatch(addPostAC(postText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport Description from \"./Description/Description\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../commons/Preloader/Preloader\";\r\n\r\n\r\n\r\nconst Profile = ({...props}) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.allProfile}>\r\n            <div className={classes.afterWall}>\r\n\r\n                {props.isDownload ?\r\n                <Preloader/> :\r\n                    <div>\r\n                <Description saveContacts={props.saveContacts} {...props} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n                <MyPostsContainer/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getUsersStatus,\r\n    saveContacts,\r\n    savePhotoThunk,\r\n    updateStatus,\r\n} from \"../../redux/profilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\n// import {withAuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId; //hardCode was 2\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getUsersStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId }/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    aboutMe:state.profilePage.aboutMe,\r\n    authorizedUserId:state.auth.id,\r\n    isAuth:state.auth.isAuth,\r\n    isDownload:state.profilePage.isDownload\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileThunk,getUsersStatus,updateStatus,savePhotoThunk,saveContacts}),\r\n    withRouter,\r\n    // withAuthRedirectComponent\r\n)(ProfileContainer);","import './App.css';\r\nimport React, {Suspense} from \"react\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport NavBarContainer from \"./components/NavBar/NavBarContainer\";\r\nimport HeaderHtmlContainer from \"./components/HeaderHtml/HeaderHtmlContainer\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeAppThunk} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/commons/Preloader/Preloader\";\r\n\r\nconst LoginContainer = React.lazy(() => import(\"./components/commons/LoginContainer\"));\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\n\r\n\r\nclass App extends React.Component {\r\n    catchAllUnhandleErrors = ()=> {\r\n        alert('Some Error was occurred');\r\n    }\r\n    componentDidMount() {\r\n        this.props.initializeAppThunk();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n    }\r\n    // componentWillMount() {\r\n    //     window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n    // }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div>\r\n                <HeaderHtmlContainer/>\r\n                <div className='app-wrapper'>\r\n                    <NavBarContainer/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Suspense fallback={<Preloader/>}>\r\n                            <Switch>\r\n                                <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                                <Redirect exact from={`/profile/${this.props.authorizedUserId}`}  to='/profile'/>\r\n                                <Route path='/dialogs'\r\n                                       component={() => <DialogsContainer/>}/>\r\n                                <Route path='/profile/:userId?'\r\n                                       component={() => <ProfileContainer/>}/>\r\n                                <Route path='/users'\r\n                                       component={() => <UsersContainer/>}/>\r\n                                <Route path='/music' component={Music}/>\r\n                                <Route path='/news' component={News}/>\r\n                                <Route path='/settings' component={Settings}/>\r\n                                <Route path='/login' component={LoginContainer}/>\r\n                                <Route path='*'\r\n                                       render={() => <div className='error'>ERROR 404 PAGE NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    authorizedUserId:state.auth.id,\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeAppThunk}))(App);\r\n","import reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport store from \"./redux/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                     <App/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\nreportWebVitals();\r\n","import classes from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.preloader}>\r\n            <div className={classes.spinner}>{\" \"}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaAndDesc\":\"Disc_avaAndDesc__3ks85\",\"avaImg\":\"Disc_avaImg__25ZQh\",\"loading\":\"Disc_loading__P7O4-\",\"about\":\"Disc_about__3Mi41\",\"divDesc\":\"Disc_divDesc__1q29N\",\"divDescLabel\":\"Disc_divDescLabel__3px7_\",\"userDecsName\":\"Disc_userDecsName__OiPgz\",\"divDescLabelName\":\"Disc_divDescLabelName__QyC_G\",\"contacts\":\"Disc_contacts__2G11g\",\"links\":\"Disc_links__AZEPL\",\"formiklinks\":\"Disc_formiklinks__2GvVS\",\"formiklinksAbout\":\"Disc_formiklinksAbout__1-Aza\",\"nameFieldAbout\":\"Disc_nameFieldAbout__2XYdU\",\"selectImg\":\"Disc_selectImg__3IYME\",\"avatarInp\":\"Disc_avatarInp__3C2RY\",\"settingBtn\":\"Disc_settingBtn__3KPT9\",\"linksOrForm\":\"Disc_linksOrForm__3CNn9\",\"editBtn\":\"Disc_editBtn__3G59D\",\"noInfoContacts\":\"Disc_noInfoContacts__39F26\",\"nameField\":\"Disc_nameField__2gI53\",\"contactsValues\":\"Disc_contactsValues__1ztAc\",\"aboutValues\":\"Disc_aboutValues__1w7PF\",\"errors\":\"Disc_errors__2LK5K\",\"contactsBtn\":\"Disc_contactsBtn__1kLL3\",\"editBtnGrid\":\"Disc_editBtnGrid__2QKEZ\",\"profileLinks\":\"Disc_profileLinks__2dl0N\",\"aboutSelfEditBtn\":\"Disc_aboutSelfEditBtn__3VxPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wr1\":\"HeaderHtml_wr1__2vf40\",\"loginBlock\":\"HeaderHtml_loginBlock__3xEN0\",\"avaLogin\":\"HeaderHtml_avaLogin__15YA2\",\"userLogin\":\"HeaderHtml_userLogin__DRrF8\",\"outBtn\":\"HeaderHtml_outBtn__zMsfI\",\"headLogo\":\"HeaderHtml_headLogo__Fsybj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1KsJa\",\"statusGrid\":\"ProfileStatus_statusGrid__2d9BL\",\"textArea\":\"ProfileStatus_textArea___qW5N\",\"statusArea\":\"ProfileStatus_statusArea__1-8Iu\",\"profileStatusHooksBtn\":\"ProfileStatus_profileStatusHooksBtn__2FweU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPosts_mypost__37-rj\",\"divPost\":\"MyPosts_divPost__3iMqs\",\"labelMyPost\":\"MyPosts_labelMyPost__jyeCq\",\"errors\":\"MyPosts_errors__hxFIs\",\"formikForm\":\"MyPosts_formikForm__1TExR\",\"button\":\"MyPosts_button__Ctg2l\",\"textArea\":\"MyPosts_textArea__1JP9n\"};","import {authAPI, profileAPI} from \"../api/api\";\r\n\r\nconst AUTH_USER_DATA = \"network/auth/AUTH_USER_DATA\";\r\nconst PROFILE_INFO = \"network/profile/PROFILE_INFO\";\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    profile: null\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case PROFILE_INFO:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUser = (id, email, login, isAuth, profile) => ({\r\n    type: AUTH_USER_DATA,\r\n    payload: {id, email, login, isAuth, profile}\r\n});\r\nexport const setCurrentUserInfo = (profile) => ({type: PROFILE_INFO, profile});\r\n\r\n\r\nexport const authMeThunk = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me();\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUser(id, email, login, true));\r\n            {\r\n                let response = await profileAPI.getProfile(id);\r\n                dispatch(setCurrentUserInfo(response.data))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const loginThunk = (email, password, rememberMe, setSubmitting, setFieldError, setStatus, captcha) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMeThunk());\r\n        }\r\n        if (response.data.resultCode === 10) {\r\n            setStatus(response.data.messages);\r\n            {let response = await authAPI.getCaptcha();\r\n                setSubmitting(response.data.url)\r\n            }//{}cause second let response;\r\n        } else {\r\n            setStatus(response.data.messages)\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUser(null, null, null, false, null));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3uS9c\",\"usersDialogs\":\"Dialogs_usersDialogs__3WFca\",\"user\":\"Dialogs_user__1zwAL\",\"activeLink\":\"Dialogs_activeLink__2mDNt\",\"oneMessage\":\"Dialogs_oneMessage__3vJTs\",\"name\":\"Dialogs_name__3NwXD\",\"messages\":\"Dialogs_messages__pVrRU\",\"other\":\"Dialogs_other__1oZ_0\",\"answer\":\"Dialogs_answer__2BVBv\",\"inputMessage\":\"Dialogs_inputMessage__3QDcu\",\"errors\":\"Dialogs_errors__10lKJ\",\"button\":\"Dialogs_button__1p1Va\"};","export default __webpack_public_path__ + \"static/media/no-user-26.d821428d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"afterWall\":\"Profile_afterWall__1hz4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1k8b5\",\"spinner\":\"Preloader_spinner__XNCHn\",\"spin\":\"Preloader_spin__3FQC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backImgBtn\":\"SettingBtn_backImgBtn__2CERy\",\"bgBtn\":\"SettingBtn_bgBtn__2ETN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item___KzIi\",\"like\":\"Post_like__28MpH\"};","const SEND_MESSAGE = 'network/messages/SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n\r\n    dialogsState: [\r\n        {\r\n            id: 1,\r\n            name: 'Dimich',\r\n            avatar: 'https://i.ytimg.com/vi/iJ4UGNGzJzY/hqdefault.jpg?sqp=-oaymwEXCOADEI4CSFryq4qpAwkIARUAAIhCGAE=&rs=AOn4CLBnmgSojZdsUkxXfQLs7wK5dW0irw'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Maria',\r\n            avatar: 'https://www.seas.harvard.edu/sites/default/files/styles/embedded_image_large/public/images/news/zlatkova_maria_web_square.jpg?itok=Z2IqHSei'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Hannah',\r\n            avatar: 'https://cs50.harvard.edu/college/2019/fall/staff/media/Emma-Humphrey.png'\r\n        },\r\n        {id: 4, name: 'Rob', avatar: 'https://cra.org/wp-content/uploads/2018/05/Robert-Bowden.jpg'},\r\n        {\r\n            id: 5,\r\n            name: 'David',\r\n            avatar: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/David_J._Malan.png/220px-David_J._Malan.png'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Victor',\r\n            avatar: 'https://i.ytimg.com/an/TW0FUhT0m-Bqg2trTbSs0g/featured_channel.jpg?v=5fc22bf3'\r\n        }\r\n    ],\r\n    messageState: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"Hello World!\"},\r\n        {id: 3, message: \"All love triangle\"},\r\n        {id: 4, message: \"Nice 2 mu\"},\r\n        {id: 5, message: \"Yo\"},\r\n        {id: 6, message: \"Hello\"},\r\n    ],\r\n    answerState: [\r\n        {id: 1, message: \"Hello, Dimich\"},\r\n        {id: 2, message: \"I can write it on JS!\"}\r\n    ]\r\n}\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                answerState: [...state.answerState, {id: 3, message: action.messageText}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (messageText) => ({type: SEND_MESSAGE,messageText:messageText });\r\nexport default dialogsPageReducer;","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UserDialog = (props) => {\r\n    let way = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n\r\n            <NavLink activeClassName={classes.activeLink} to={way}>\r\n               <div className={classes.avatar}><img src={props.avatar} alt='avatar'/></div>\r\n               <div className={classes.name}>{props.name}</div>\r\n            </NavLink>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default UserDialog;\r\n"],"sourceRoot":""}