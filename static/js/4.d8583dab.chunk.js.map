{"version":3,"sources":["components/Dialogs/AnswerMessage/AnswerMessage.module.css","components/Dialogs/Mesage/Mesage.jsx","components/Dialogs/AnswerMessage/AnswerMessage.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Mesage","props","className","classes","mesage","oneMessage","other","message","AnswerMessage","me","LoginFormik","MyTextArea","label","useField","field","initialValues","messageText","validationSchema","Yup","max","onSubmit","values","sendMessage","formik","handleSubmit","textField","name","type","placeholder","rows","cols","errors","button","Dialogs","mapDialog","dialogsPage","dialogsState","map","dialog","UserDialog","id","avatar","mapMessages","messageState","textMessage","mapAnswerMessage","answerState","textMessageA","dialogs","usersDialogs","messages","answer","mapStateToPropsRedirect","state","isAuth","auth","compose","connect","dispatch","Component","RedirectComponent","this","to","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,WAAa,kCAAkC,GAAK,4B,mHCWvDC,EATA,SAACC,GACZ,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,qBAAKF,UAAWC,IAAQE,WAAxB,SACI,qBAAKH,UAAWC,IAAQG,MAAxB,SAAgCL,EAAMM,e,0BCKvCC,EATO,SAACP,GACnB,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,qBAAKF,UAAWC,IAAQE,WAAxB,SACI,qBAAKH,UAAWC,IAAQM,GAAxB,SAA6BR,EAAMM,e,eCE7CG,EAAc,SAACT,GACjB,IAAMU,EAAa,SAAC,GAAsB,EAArBC,MAAsB,IAAZX,EAAW,yBACtC,EAAgBY,YAASZ,GAAlBa,EAAP,oBACA,OACI,mCACI,oDAAcA,GAAWb,OAIrC,OACI,8BACI,cAAC,IAAD,CACIc,cAAe,CAACC,YAAa,IAC7BC,iBAAkBC,IAAW,CACzBF,YAAaE,MACRC,IAAI,IAAK,6EAGlBC,SAAU,SAAAC,GACNpB,EAAMqB,YAAYD,EAAOL,cARjC,SAWK,SAAAO,GAAM,OACF,eAAC,IAAD,CAAMH,SAAUG,EAAOC,aAAvB,UAEG,cAACb,EAAD,CAAaT,UAAWC,IAAQsB,UACnBC,KAAK,cACLC,KAAK,YACLC,YAAW,sGACXC,KAAK,IACLC,KAAK,OAClB,qBAAK5B,UAAWC,IAAQ4B,OAAxB,SAAgC,cAAC,IAAD,CAAcL,KAAK,kBAEnD,qBAAKxB,UAAWC,IAAQ6B,OAAxB,SACI,wBAAQL,KAAK,SAAb,+EA2CbM,EAhCC,SAAChC,GACb,IAAIiC,EAAYjC,EAAMkC,YAAYC,aAAaC,KAAI,SAAAC,GAAM,OACrD,cAACC,EAAA,EAAD,CAAYb,KAAMY,EAAOZ,KAAsBc,GAAIF,EAAOE,GAAIC,OAAQH,EAAOG,QAAzCH,EAAOE,OAE3CE,EAAczC,EAAMkC,YAAYQ,aAAaN,KAAI,SAAAO,GAAW,OAC5D,cAAC,EAAD,CAAQrC,QAASqC,EAAYrC,SAAcqC,EAAYJ,OAEvDK,EAAmB5C,EAAMkC,YAAYW,YAAYT,KAAI,SAAAU,GAAY,OACjE,cAAC,EAAD,CAAexC,QAASwC,EAAaxC,SAAcwC,EAAaP,OAIpE,OACI,gCACI,sBAAKtC,UAAWC,IAAQ6C,QAAxB,UACI,qBAAK9C,UAAWC,IAAQ8C,aAAxB,SACKf,IAEL,qBAAKhC,UAAWC,IAAQ+C,SAAxB,SACKR,OAIT,sBAAKxC,UAAWC,IAAQgD,OAAxB,UACKN,EACD,cAAC,EAAD,CAAavB,YAAarB,EAAMqB,qB,8CC3E5C8B,EAA0B,SAACC,GAC3B,MAAM,CACFC,OAAQD,EAAME,KAAKD,S,QCiBZE,sBACXC,aAhBkB,SAACJ,GACnB,MAAO,CACHlB,YAAakB,EAAMlB,gBAIF,SAACuB,GACtB,MAAO,CACHpC,YAAa,SAACN,GACV0C,EAASpC,YAAYN,UDPQ,SAAC2C,GAAe,IAC/CC,EAD8C,4JAEhD,WACI,OAAKC,KAAK5D,MAAMqD,OACT,cAACK,EAAD,eAAeE,KAAK5D,QADI,cAAC,IAAD,CAAU6D,GAAG,eAHA,GACpBC,IAAMJ,WAOtC,OAAOF,YAAQL,EAARK,CAAiCG,KCK7BJ,CAGbvB","file":"static/js/4.d8583dab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"oneMessage\":\"AnswerMessage_oneMessage__1TJEu\",\"me\":\"AnswerMessage_me__324NK\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst Mesage = (props) => {\r\n    return (\r\n        <div className={classes.mesage}>\r\n            <div className={classes.oneMessage}>\r\n                <div className={classes.other}>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Mesage;\r\n","import React from 'react';\r\nimport classes from './AnswerMessage.module.css'\r\n\r\nconst AnswerMessage = (props) => {\r\n    return (\r\n        <div className={classes.mesage}>\r\n            <div className={classes.oneMessage}>\r\n                <div className={classes.me}>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AnswerMessage;\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport Mesage from \"./Mesage/Mesage\";\r\nimport UserDialog from \"./UserDialog/UserDialog\";\r\nimport AnswerMessage from \"./AnswerMessage/AnswerMessage\";\r\nimport {ErrorMessage, Form, Formik, useField} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst LoginFormik = (props) => {\r\n    const MyTextArea = ({label, ...props}) => {\r\n        const [field] = useField(props);\r\n        return (\r\n            <>\r\n                <textarea {...field} {...props} />\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{messageText: ''}}\r\n                validationSchema={Yup.object({\r\n                    messageText: Yup.string()\r\n                        .max(1000,'Максимально 1000'),\r\n\r\n                })}\r\n                onSubmit={values => {\r\n                    props.sendMessage(values.messageText);\r\n                }}\r\n            >\r\n                {formik =>\r\n                    (<Form onSubmit={formik.handleSubmit}>\r\n\r\n                        <MyTextArea  className={classes.textField}\r\n                                     name=\"messageText\"\r\n                                     type=\"text-area\"\r\n                                     placeholder={`  Введите сообщение`}\r\n                                     rows=\"5\"\r\n                                     cols=\"30\"/>\r\n                        <div className={classes.errors}><ErrorMessage name='messageText'/></div>\r\n\r\n                        <div className={classes.button}>\r\n                            <button type=\"submit\">Отправить</button>\r\n                        </div>\r\n\r\n                    </Form>)}\r\n\r\n            </Formik>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    let mapDialog = props.dialogsPage.dialogsState.map(dialog =>\r\n        <UserDialog name={dialog.name} key={dialog.id} id={dialog.id} avatar={dialog.avatar}/>);\r\n\r\n    let mapMessages = props.dialogsPage.messageState.map(textMessage =>\r\n        <Mesage message={textMessage.message} key={textMessage.id}/>);\r\n\r\n    let mapAnswerMessage = props.dialogsPage.answerState.map(textMessageA =>\r\n        <AnswerMessage message={textMessageA.message} key={textMessageA.id}/>);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.usersDialogs}>\r\n                    {mapDialog}\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    {mapMessages}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.answer}>\r\n                {mapAnswerMessage}\r\n                <LoginFormik sendMessage={props.sendMessage}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}","//import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogsPageReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (messageText) => {\r\n            dispatch(sendMessage(messageText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirectComponent\r\n)(Dialogs);\r\n"],"sourceRoot":""}